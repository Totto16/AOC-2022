module.exports = {
    root: true,
    env: {
      'node': true,
    },
    parser: '@typescript-eslint/parser',
    parserOptions: {
      project: [
        './tsconfig.json'
      ],
      tsconfigRootDir: __dirname,
      ecmaVersion: 2020
    },
    plugins: [
      '@typescript-eslint',
      "import",
      "node",
      "boundaries",
      "regexp",
      "this",
      "optimize-regex",
      "security",
      "github"
    ],
    extends: [
      'eslint:recommended',
      'plugin:@typescript-eslint/recommended',
      "plugin:@typescript-eslint/recommended-requiring-type-checking",
      "plugin:import/recommended",
      "plugin:import/typescript",
      "plugin:node/recommended",
      'plugin:@typescript-eslint/eslint-recommended',
      "plugin:boundaries/recommended",
      "plugin:regexp/recommended",
      "plugin:security/recommended",
      "plugin:github/recommended",
      "plugin:prettier/recommended"
    ],
    rules: {
      '@typescript-eslint/no-floating-promises': "error",
      '@typescript-eslint/no-misused-promises': "error",
      '@typescript-eslint/adjacent-overload-signatures': "error",
      '@typescript-eslint/await-thenable': "error",
      '@typescript-eslint/ban-ts-comment': "error",
      '@typescript-eslint/explicit-module-boundary-types': "error",
      '@typescript-eslint/no-empty-interface': "error",
      '@typescript-eslint/no-explicit-any': "error", 	
      '@typescript-eslint/no-extra-non-null-assertion': "error",
      '@typescript-eslint/no-for-in-array': "error",
      '@typescript-eslint/no-inferrable-types': "error",
      '@typescript-eslint/no-misused-new': "error",
      '@typescript-eslint/no-non-null-assertion': "error",
      '@typescript-eslint/no-unsafe-assignment': "error",
      '@typescript-eslint/no-unsafe-call': "error",
      '@typescript-eslint/no-unsafe-member-access': "error",
      '@typescript-eslint/no-unsafe-return': "error",
      '@typescript-eslint/prefer-regexp-exec': "error",
      '@typescript-eslint/restrict-plus-operands': "error",
      '@typescript-eslint/restrict-template-expressions': "error",
      '@typescript-eslint/triple-slash-reference': "error",
      '@typescript-eslint/unbound-method': "error",
      '@typescript-eslint/no-implied-eval': "error",
      '@typescript-eslint/no-unused-vars': "warn",
      '@typescript-eslint/require-await': "error",
      '@typescript-eslint/no-unnecessary-condition': "error",
      '@typescript-eslint/strict-boolean-expressions': "error",
      'no-process-exit': "warn",
      "node/no-unsupported-features/es-syntax":"off",
      "node/no-missing-import":"off",
      "import/no-unresolved":"off",
      "no-var": "error",
      "eqeqeq": "error",
      "this/no-this": "error",
      "optimize-regex/optimize-regex": "warn",
      "sort-imports": "off",
      "i18n-text/no-en":"off",
      "camelcase":"warn",
      "github/array-foreach":"warn",
      "no-console":"off",
      "no-process-exit":"off"
    }
  };